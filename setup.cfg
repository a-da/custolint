[metadata]
name = custolint
version = 0.3.2
description = Another custom linter layer
long_description = file: README.rst
    , LICENSE.rst

license = MIT License
keywords =
    static code analysis
    linter
    python
    lint
    coverage
    flake8
classifiers =
    Environment :: Console
    Intended Audience :: Developers
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Topic :: Software Development :: Debuggers
    Topic :: Software Development :: Quality Assurance
    Topic :: Software Development :: Testing

requires-python = ">=3.8"

[options]
package_dir=
    =src
packages = find:
install_requires =
    bash==0.6  # wrap git, pylint, flake8, mypy command line commands
    click==8.1.3  # handle cli arguments and functions
    colorlog==6.7.0  # color the output of custolint
    pydantic==1.10.9  # dataclass

[options.packages.find]
where = src

[options.extras_require]
dev =
    pytest
    pylint
    coverage
    flake8
    mypy
    Sphinx==5.2.3
    sphinxcontrib-programoutput==0.17
    isort==5.12.0
    sphinx-click==4.4.0

deploy_to_pip =
    twine
    build

[options.entry_points]
console_scripts =
    custolint = custolint.cli:cli

[options.package_data]
* = README.rst

[isort]
known_typing=typing
sections=FUTURE,TYPING,STDLIB,FIRSTPARTY,THIRDPARTY,LOCALFOLDER
known_local_folder=custolint

[mypy]
strict = True
show_error_codes = True

[mypy-bash.*]
ignore_missing_imports = True

[flake8]
per-file-ignores =
    # line too long
    tests/*.py: E501,

ignore =
    # I100 Import statements are in the wrong order
    # replaced by isort auto-format
    I100,
    # I202 Additional newline in a group of imports
    # replaced by isort auto-format
    I202,
    # I201 Missing newline between import groups
    # replaced by isort auto-format
    I201,
    # E501 line too long
    # replaced by pylint
    E501,

[coverage:run]
source = src/custolint
branch = True

[coverage:report]
show_missing = True
exclude_lines =
    pragma: no cover

[pylint.FORMAT]
# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines=^\s*(# )?<?https?://\S+>?$|INFO:

[pylint.MAIN]
# A comma-separated list of package or module names from where C extensions may
# be loaded. Extensions are loading into the active Python interpreter and may
# run arbitrary code. (This is an alternative name to extension-pkg-allow-list
# for backward compatibility.)
extension-pkg-whitelist=mypy,pydantic

[pylint.MESSAGES CONTROL]
disable=
    raw-checker-failed,
    bad-inline-option,
    locally-disabled,
    file-ignored,
    suppressed-message,
    useless-suppression,
    deprecated-pragma,
    use-symbolic-message-instead,


[tool:pytest]
addopts = -v --doctest-modules
filterwarnings =
    error

[tool:custolint]
halt=False
commands =
    coverage,
    mypy,
    flake8,
    pylint

coverage_kwargs = data_file:.coverage
mypy_kwargs=
pylint_kwargs=
flake8_kwargs=
